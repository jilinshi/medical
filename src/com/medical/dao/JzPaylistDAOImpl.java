package com.medical.dao;

import com.medical.model.JzPaylist;
import com.medical.model.JzPaylistExample;
import java.util.List;
import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;

public class JzPaylistDAOImpl extends SqlMapClientDaoSupport implements JzPaylistDAO {

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table YLJZN.JZ_PAYLIST
     *
     * @ibatorgenerated Wed Aug 12 11:56:50 CST 2009
     */
    public JzPaylistDAOImpl() {
        super();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table YLJZN.JZ_PAYLIST
     *
     * @ibatorgenerated Wed Aug 12 11:56:50 CST 2009
     */
    public int countByExample(JzPaylistExample example) {
        Integer count = (Integer)  getSqlMapClientTemplate().queryForObject("JZ_PAYLIST.ibatorgenerated_countByExample", example);
        return count;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table YLJZN.JZ_PAYLIST
     *
     * @ibatorgenerated Wed Aug 12 11:56:50 CST 2009
     */
    public int deleteByExample(JzPaylistExample example) {
        int rows = getSqlMapClientTemplate().delete("JZ_PAYLIST.ibatorgenerated_deleteByExample", example);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table YLJZN.JZ_PAYLIST
     *
     * @ibatorgenerated Wed Aug 12 11:56:50 CST 2009
     */
    public int deleteByPrimaryKey(Integer paylistId) {
        JzPaylist key = new JzPaylist();
        key.setPaylistId(paylistId);
        int rows = getSqlMapClientTemplate().delete("JZ_PAYLIST.ibatorgenerated_deleteByPrimaryKey", key);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table YLJZN.JZ_PAYLIST
     *
     * @ibatorgenerated Wed Aug 12 11:56:50 CST 2009
     */
    public Integer insert(JzPaylist record) {
        Object newKey = getSqlMapClientTemplate().insert("JZ_PAYLIST.ibatorgenerated_insert", record);
        return (Integer) newKey;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table YLJZN.JZ_PAYLIST
     *
     * @ibatorgenerated Wed Aug 12 11:56:50 CST 2009
     */
    public Integer insertSelective(JzPaylist record) {
        Object newKey = getSqlMapClientTemplate().insert("JZ_PAYLIST.ibatorgenerated_insertSelective", record);
        return (Integer) newKey;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table YLJZN.JZ_PAYLIST
     *
     * @ibatorgenerated Wed Aug 12 11:56:50 CST 2009
     */
    @SuppressWarnings("unchecked")
    public List<JzPaylist> selectByExample(JzPaylistExample example) {
        List<JzPaylist> list = getSqlMapClientTemplate().queryForList("JZ_PAYLIST.ibatorgenerated_selectByExample", example);
        return list;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table YLJZN.JZ_PAYLIST
     *
     * @ibatorgenerated Wed Aug 12 11:56:50 CST 2009
     */
    public JzPaylist selectByPrimaryKey(Integer paylistId) {
        JzPaylist key = new JzPaylist();
        key.setPaylistId(paylistId);
        JzPaylist record = (JzPaylist) getSqlMapClientTemplate().queryForObject("JZ_PAYLIST.ibatorgenerated_selectByPrimaryKey", key);
        return record;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table YLJZN.JZ_PAYLIST
     *
     * @ibatorgenerated Wed Aug 12 11:56:50 CST 2009
     */
    public int updateByExampleSelective(JzPaylist record, JzPaylistExample example) {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMapClientTemplate().update("JZ_PAYLIST.ibatorgenerated_updateByExampleSelective", parms);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table YLJZN.JZ_PAYLIST
     *
     * @ibatorgenerated Wed Aug 12 11:56:50 CST 2009
     */
    public int updateByExample(JzPaylist record, JzPaylistExample example) {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMapClientTemplate().update("JZ_PAYLIST.ibatorgenerated_updateByExample", parms);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table YLJZN.JZ_PAYLIST
     *
     * @ibatorgenerated Wed Aug 12 11:56:50 CST 2009
     */
    public int updateByPrimaryKeySelective(JzPaylist record) {
        int rows = getSqlMapClientTemplate().update("JZ_PAYLIST.ibatorgenerated_updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table YLJZN.JZ_PAYLIST
     *
     * @ibatorgenerated Wed Aug 12 11:56:50 CST 2009
     */
    public int updateByPrimaryKey(JzPaylist record) {
        int rows = getSqlMapClientTemplate().update("JZ_PAYLIST.ibatorgenerated_updateByPrimaryKey", record);
        return rows;
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table YLJZN.JZ_PAYLIST
     *
     * @ibatorgenerated Wed Aug 12 11:56:50 CST 2009
     */
    private static class UpdateByExampleParms extends JzPaylistExample {
        private Object record;

        public UpdateByExampleParms(Object record, JzPaylistExample example) {
            super(example);
            this.record = record;
        }

        @SuppressWarnings("unused")
		public Object getRecord() {
            return record;
        }
    }
}