package com.medical.model;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class JzPaylistExample {
    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table YLJZN.JZ_PAYLIST
     *
     * @ibatorgenerated Wed Aug 12 11:56:50 CST 2009
     */
    protected String orderByClause;

    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table YLJZN.JZ_PAYLIST
     *
     * @ibatorgenerated Wed Aug 12 11:56:50 CST 2009
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table YLJZN.JZ_PAYLIST
     *
     * @ibatorgenerated Wed Aug 12 11:56:50 CST 2009
     */
    public JzPaylistExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table YLJZN.JZ_PAYLIST
     *
     * @ibatorgenerated Wed Aug 12 11:56:50 CST 2009
     */
    protected JzPaylistExample(JzPaylistExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table YLJZN.JZ_PAYLIST
     *
     * @ibatorgenerated Wed Aug 12 11:56:50 CST 2009
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table YLJZN.JZ_PAYLIST
     *
     * @ibatorgenerated Wed Aug 12 11:56:50 CST 2009
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table YLJZN.JZ_PAYLIST
     *
     * @ibatorgenerated Wed Aug 12 11:56:50 CST 2009
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table YLJZN.JZ_PAYLIST
     *
     * @ibatorgenerated Wed Aug 12 11:56:50 CST 2009
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table YLJZN.JZ_PAYLIST
     *
     * @ibatorgenerated Wed Aug 12 11:56:50 CST 2009
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table YLJZN.JZ_PAYLIST
     *
     * @ibatorgenerated Wed Aug 12 11:56:50 CST 2009
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table YLJZN.JZ_PAYLIST
     *
     * @ibatorgenerated Wed Aug 12 11:56:50 CST 2009
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table YLJZN.JZ_PAYLIST
     *
     * @ibatorgenerated Wed Aug 12 11:56:50 CST 2009
     */
    public static class Criteria {
        protected List<String> criteriaWithoutValue;

        protected List<Map<String, Object>> criteriaWithSingleValue;

        protected List<Map<String, Object>> criteriaWithListValue;

        protected List<Map<String, Object>> criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList<String>();
            criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
            criteriaWithListValue = new ArrayList<Map<String, Object>>();
            criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List<String> getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List<Map<String, Object>> getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List<Map<String, Object>> getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List<Map<String, Object>> getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List<? extends Object> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List<Object> list = new ArrayList<Object>();
            list.add(value1);
            list.add(value2);
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andPaylistIdIsNull() {
            addCriterion("PAYLIST_ID is null");
            return this;
        }

        public Criteria andPaylistIdIsNotNull() {
            addCriterion("PAYLIST_ID is not null");
            return this;
        }

        public Criteria andPaylistIdEqualTo(Integer value) {
            addCriterion("PAYLIST_ID =", value, "paylistId");
            return this;
        }

        public Criteria andPaylistIdNotEqualTo(Integer value) {
            addCriterion("PAYLIST_ID <>", value, "paylistId");
            return this;
        }

        public Criteria andPaylistIdGreaterThan(Integer value) {
            addCriterion("PAYLIST_ID >", value, "paylistId");
            return this;
        }

        public Criteria andPaylistIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("PAYLIST_ID >=", value, "paylistId");
            return this;
        }

        public Criteria andPaylistIdLessThan(Integer value) {
            addCriterion("PAYLIST_ID <", value, "paylistId");
            return this;
        }

        public Criteria andPaylistIdLessThanOrEqualTo(Integer value) {
            addCriterion("PAYLIST_ID <=", value, "paylistId");
            return this;
        }

        public Criteria andPaylistIdIn(List<Integer> values) {
            addCriterion("PAYLIST_ID in", values, "paylistId");
            return this;
        }

        public Criteria andPaylistIdNotIn(List<Integer> values) {
            addCriterion("PAYLIST_ID not in", values, "paylistId");
            return this;
        }

        public Criteria andPaylistIdBetween(Integer value1, Integer value2) {
            addCriterion("PAYLIST_ID between", value1, value2, "paylistId");
            return this;
        }

        public Criteria andPaylistIdNotBetween(Integer value1, Integer value2) {
            addCriterion("PAYLIST_ID not between", value1, value2, "paylistId");
            return this;
        }

        public Criteria andBizIdIsNull() {
            addCriterion("BIZ_ID is null");
            return this;
        }

        public Criteria andBizIdIsNotNull() {
            addCriterion("BIZ_ID is not null");
            return this;
        }

        public Criteria andBizIdEqualTo(Integer value) {
            addCriterion("BIZ_ID =", value, "bizId");
            return this;
        }

        public Criteria andBizIdNotEqualTo(Integer value) {
            addCriterion("BIZ_ID <>", value, "bizId");
            return this;
        }

        public Criteria andBizIdGreaterThan(Integer value) {
            addCriterion("BIZ_ID >", value, "bizId");
            return this;
        }

        public Criteria andBizIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("BIZ_ID >=", value, "bizId");
            return this;
        }

        public Criteria andBizIdLessThan(Integer value) {
            addCriterion("BIZ_ID <", value, "bizId");
            return this;
        }

        public Criteria andBizIdLessThanOrEqualTo(Integer value) {
            addCriterion("BIZ_ID <=", value, "bizId");
            return this;
        }

        public Criteria andBizIdIn(List<Integer> values) {
            addCriterion("BIZ_ID in", values, "bizId");
            return this;
        }

        public Criteria andBizIdNotIn(List<Integer> values) {
            addCriterion("BIZ_ID not in", values, "bizId");
            return this;
        }

        public Criteria andBizIdBetween(Integer value1, Integer value2) {
            addCriterion("BIZ_ID between", value1, value2, "bizId");
            return this;
        }

        public Criteria andBizIdNotBetween(Integer value1, Integer value2) {
            addCriterion("BIZ_ID not between", value1, value2, "bizId");
            return this;
        }

        public Criteria andPayOrdinalIsNull() {
            addCriterion("PAY_ORDINAL is null");
            return this;
        }

        public Criteria andPayOrdinalIsNotNull() {
            addCriterion("PAY_ORDINAL is not null");
            return this;
        }

        public Criteria andPayOrdinalEqualTo(Short value) {
            addCriterion("PAY_ORDINAL =", value, "payOrdinal");
            return this;
        }

        public Criteria andPayOrdinalNotEqualTo(Short value) {
            addCriterion("PAY_ORDINAL <>", value, "payOrdinal");
            return this;
        }

        public Criteria andPayOrdinalGreaterThan(Short value) {
            addCriterion("PAY_ORDINAL >", value, "payOrdinal");
            return this;
        }

        public Criteria andPayOrdinalGreaterThanOrEqualTo(Short value) {
            addCriterion("PAY_ORDINAL >=", value, "payOrdinal");
            return this;
        }

        public Criteria andPayOrdinalLessThan(Short value) {
            addCriterion("PAY_ORDINAL <", value, "payOrdinal");
            return this;
        }

        public Criteria andPayOrdinalLessThanOrEqualTo(Short value) {
            addCriterion("PAY_ORDINAL <=", value, "payOrdinal");
            return this;
        }

        public Criteria andPayOrdinalIn(List<Short> values) {
            addCriterion("PAY_ORDINAL in", values, "payOrdinal");
            return this;
        }

        public Criteria andPayOrdinalNotIn(List<Short> values) {
            addCriterion("PAY_ORDINAL not in", values, "payOrdinal");
            return this;
        }

        public Criteria andPayOrdinalBetween(Short value1, Short value2) {
            addCriterion("PAY_ORDINAL between", value1, value2, "payOrdinal");
            return this;
        }

        public Criteria andPayOrdinalNotBetween(Short value1, Short value2) {
            addCriterion("PAY_ORDINAL not between", value1, value2, "payOrdinal");
            return this;
        }

        public Criteria andFuncIdIsNull() {
            addCriterion("FUNC_ID is null");
            return this;
        }

        public Criteria andFuncIdIsNotNull() {
            addCriterion("FUNC_ID is not null");
            return this;
        }

        public Criteria andFuncIdEqualTo(String value) {
            addCriterion("FUNC_ID =", value, "funcId");
            return this;
        }

        public Criteria andFuncIdNotEqualTo(String value) {
            addCriterion("FUNC_ID <>", value, "funcId");
            return this;
        }

        public Criteria andFuncIdGreaterThan(String value) {
            addCriterion("FUNC_ID >", value, "funcId");
            return this;
        }

        public Criteria andFuncIdGreaterThanOrEqualTo(String value) {
            addCriterion("FUNC_ID >=", value, "funcId");
            return this;
        }

        public Criteria andFuncIdLessThan(String value) {
            addCriterion("FUNC_ID <", value, "funcId");
            return this;
        }

        public Criteria andFuncIdLessThanOrEqualTo(String value) {
            addCriterion("FUNC_ID <=", value, "funcId");
            return this;
        }

        public Criteria andFuncIdLike(String value) {
            addCriterion("FUNC_ID like", value, "funcId");
            return this;
        }

        public Criteria andFuncIdNotLike(String value) {
            addCriterion("FUNC_ID not like", value, "funcId");
            return this;
        }

        public Criteria andFuncIdIn(List<String> values) {
            addCriterion("FUNC_ID in", values, "funcId");
            return this;
        }

        public Criteria andFuncIdNotIn(List<String> values) {
            addCriterion("FUNC_ID not in", values, "funcId");
            return this;
        }

        public Criteria andFuncIdBetween(String value1, String value2) {
            addCriterion("FUNC_ID between", value1, value2, "funcId");
            return this;
        }

        public Criteria andFuncIdNotBetween(String value1, String value2) {
            addCriterion("FUNC_ID not between", value1, value2, "funcId");
            return this;
        }

        public Criteria andFundNameIsNull() {
            addCriterion("FUND_NAME is null");
            return this;
        }

        public Criteria andFundNameIsNotNull() {
            addCriterion("FUND_NAME is not null");
            return this;
        }

        public Criteria andFundNameEqualTo(String value) {
            addCriterion("FUND_NAME =", value, "fundName");
            return this;
        }

        public Criteria andFundNameNotEqualTo(String value) {
            addCriterion("FUND_NAME <>", value, "fundName");
            return this;
        }

        public Criteria andFundNameGreaterThan(String value) {
            addCriterion("FUND_NAME >", value, "fundName");
            return this;
        }

        public Criteria andFundNameGreaterThanOrEqualTo(String value) {
            addCriterion("FUND_NAME >=", value, "fundName");
            return this;
        }

        public Criteria andFundNameLessThan(String value) {
            addCriterion("FUND_NAME <", value, "fundName");
            return this;
        }

        public Criteria andFundNameLessThanOrEqualTo(String value) {
            addCriterion("FUND_NAME <=", value, "fundName");
            return this;
        }

        public Criteria andFundNameLike(String value) {
            addCriterion("FUND_NAME like", value, "fundName");
            return this;
        }

        public Criteria andFundNameNotLike(String value) {
            addCriterion("FUND_NAME not like", value, "fundName");
            return this;
        }

        public Criteria andFundNameIn(List<String> values) {
            addCriterion("FUND_NAME in", values, "fundName");
            return this;
        }

        public Criteria andFundNameNotIn(List<String> values) {
            addCriterion("FUND_NAME not in", values, "fundName");
            return this;
        }

        public Criteria andFundNameBetween(String value1, String value2) {
            addCriterion("FUND_NAME between", value1, value2, "fundName");
            return this;
        }

        public Criteria andFundNameNotBetween(String value1, String value2) {
            addCriterion("FUND_NAME not between", value1, value2, "fundName");
            return this;
        }

        public Criteria andRealPayIsNull() {
            addCriterion("REAL_PAY is null");
            return this;
        }

        public Criteria andRealPayIsNotNull() {
            addCriterion("REAL_PAY is not null");
            return this;
        }

        public Criteria andRealPayEqualTo(BigDecimal value) {
            addCriterion("REAL_PAY =", value, "realPay");
            return this;
        }

        public Criteria andRealPayNotEqualTo(BigDecimal value) {
            addCriterion("REAL_PAY <>", value, "realPay");
            return this;
        }

        public Criteria andRealPayGreaterThan(BigDecimal value) {
            addCriterion("REAL_PAY >", value, "realPay");
            return this;
        }

        public Criteria andRealPayGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("REAL_PAY >=", value, "realPay");
            return this;
        }

        public Criteria andRealPayLessThan(BigDecimal value) {
            addCriterion("REAL_PAY <", value, "realPay");
            return this;
        }

        public Criteria andRealPayLessThanOrEqualTo(BigDecimal value) {
            addCriterion("REAL_PAY <=", value, "realPay");
            return this;
        }

        public Criteria andRealPayIn(List<BigDecimal> values) {
            addCriterion("REAL_PAY in", values, "realPay");
            return this;
        }

        public Criteria andRealPayNotIn(List<BigDecimal> values) {
            addCriterion("REAL_PAY not in", values, "realPay");
            return this;
        }

        public Criteria andRealPayBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("REAL_PAY between", value1, value2, "realPay");
            return this;
        }

        public Criteria andRealPayNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("REAL_PAY not between", value1, value2, "realPay");
            return this;
        }

        public Criteria andSumFlagIsNull() {
            addCriterion("SUM_FLAG is null");
            return this;
        }

        public Criteria andSumFlagIsNotNull() {
            addCriterion("SUM_FLAG is not null");
            return this;
        }

        public Criteria andSumFlagEqualTo(String value) {
            addCriterion("SUM_FLAG =", value, "sumFlag");
            return this;
        }

        public Criteria andSumFlagNotEqualTo(String value) {
            addCriterion("SUM_FLAG <>", value, "sumFlag");
            return this;
        }

        public Criteria andSumFlagGreaterThan(String value) {
            addCriterion("SUM_FLAG >", value, "sumFlag");
            return this;
        }

        public Criteria andSumFlagGreaterThanOrEqualTo(String value) {
            addCriterion("SUM_FLAG >=", value, "sumFlag");
            return this;
        }

        public Criteria andSumFlagLessThan(String value) {
            addCriterion("SUM_FLAG <", value, "sumFlag");
            return this;
        }

        public Criteria andSumFlagLessThanOrEqualTo(String value) {
            addCriterion("SUM_FLAG <=", value, "sumFlag");
            return this;
        }

        public Criteria andSumFlagLike(String value) {
            addCriterion("SUM_FLAG like", value, "sumFlag");
            return this;
        }

        public Criteria andSumFlagNotLike(String value) {
            addCriterion("SUM_FLAG not like", value, "sumFlag");
            return this;
        }

        public Criteria andSumFlagIn(List<String> values) {
            addCriterion("SUM_FLAG in", values, "sumFlag");
            return this;
        }

        public Criteria andSumFlagNotIn(List<String> values) {
            addCriterion("SUM_FLAG not in", values, "sumFlag");
            return this;
        }

        public Criteria andSumFlagBetween(String value1, String value2) {
            addCriterion("SUM_FLAG between", value1, value2, "sumFlag");
            return this;
        }

        public Criteria andSumFlagNotBetween(String value1, String value2) {
            addCriterion("SUM_FLAG not between", value1, value2, "sumFlag");
            return this;
        }
    }
}