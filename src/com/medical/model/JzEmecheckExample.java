package com.medical.model;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

public class JzEmecheckExample {
    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table YLJZN.JZ_EMECHECK
     *
     * @ibatorgenerated Wed Sep 30 09:34:47 CST 2009
     */
    protected String orderByClause;

    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table YLJZN.JZ_EMECHECK
     *
     * @ibatorgenerated Wed Sep 30 09:34:47 CST 2009
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table YLJZN.JZ_EMECHECK
     *
     * @ibatorgenerated Wed Sep 30 09:34:47 CST 2009
     */
    public JzEmecheckExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table YLJZN.JZ_EMECHECK
     *
     * @ibatorgenerated Wed Sep 30 09:34:47 CST 2009
     */
    protected JzEmecheckExample(JzEmecheckExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table YLJZN.JZ_EMECHECK
     *
     * @ibatorgenerated Wed Sep 30 09:34:47 CST 2009
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table YLJZN.JZ_EMECHECK
     *
     * @ibatorgenerated Wed Sep 30 09:34:47 CST 2009
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table YLJZN.JZ_EMECHECK
     *
     * @ibatorgenerated Wed Sep 30 09:34:47 CST 2009
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table YLJZN.JZ_EMECHECK
     *
     * @ibatorgenerated Wed Sep 30 09:34:47 CST 2009
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table YLJZN.JZ_EMECHECK
     *
     * @ibatorgenerated Wed Sep 30 09:34:47 CST 2009
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table YLJZN.JZ_EMECHECK
     *
     * @ibatorgenerated Wed Sep 30 09:34:47 CST 2009
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table YLJZN.JZ_EMECHECK
     *
     * @ibatorgenerated Wed Sep 30 09:34:47 CST 2009
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table YLJZN.JZ_EMECHECK
     *
     * @ibatorgenerated Wed Sep 30 09:34:47 CST 2009
     */
    public static class Criteria {
        protected List<String> criteriaWithoutValue;

        protected List<Map<String, Object>> criteriaWithSingleValue;

        protected List<Map<String, Object>> criteriaWithListValue;

        protected List<Map<String, Object>> criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList<String>();
            criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
            criteriaWithListValue = new ArrayList<Map<String, Object>>();
            criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List<String> getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List<Map<String, Object>> getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List<Map<String, Object>> getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List<Map<String, Object>> getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List<? extends Object> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List<Object> list = new ArrayList<Object>();
            list.add(value1);
            list.add(value2);
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andEmecheckIdIsNull() {
            addCriterion("EMECHECK_ID is null");
            return this;
        }

        public Criteria andEmecheckIdIsNotNull() {
            addCriterion("EMECHECK_ID is not null");
            return this;
        }

        public Criteria andEmecheckIdEqualTo(BigDecimal value) {
            addCriterion("EMECHECK_ID =", value, "emecheckId");
            return this;
        }

        public Criteria andEmecheckIdNotEqualTo(BigDecimal value) {
            addCriterion("EMECHECK_ID <>", value, "emecheckId");
            return this;
        }

        public Criteria andEmecheckIdGreaterThan(BigDecimal value) {
            addCriterion("EMECHECK_ID >", value, "emecheckId");
            return this;
        }

        public Criteria andEmecheckIdGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("EMECHECK_ID >=", value, "emecheckId");
            return this;
        }

        public Criteria andEmecheckIdLessThan(BigDecimal value) {
            addCriterion("EMECHECK_ID <", value, "emecheckId");
            return this;
        }

        public Criteria andEmecheckIdLessThanOrEqualTo(BigDecimal value) {
            addCriterion("EMECHECK_ID <=", value, "emecheckId");
            return this;
        }

        public Criteria andEmecheckIdIn(List<BigDecimal> values) {
            addCriterion("EMECHECK_ID in", values, "emecheckId");
            return this;
        }

        public Criteria andEmecheckIdNotIn(List<BigDecimal> values) {
            addCriterion("EMECHECK_ID not in", values, "emecheckId");
            return this;
        }

        public Criteria andEmecheckIdBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("EMECHECK_ID between", value1, value2, "emecheckId");
            return this;
        }

        public Criteria andEmecheckIdNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("EMECHECK_ID not between", value1, value2, "emecheckId");
            return this;
        }

        public Criteria andSsnIsNull() {
            addCriterion("SSN is null");
            return this;
        }

        public Criteria andSsnIsNotNull() {
            addCriterion("SSN is not null");
            return this;
        }

        public Criteria andSsnEqualTo(String value) {
            addCriterion("SSN =", value, "ssn");
            return this;
        }

        public Criteria andSsnNotEqualTo(String value) {
            addCriterion("SSN <>", value, "ssn");
            return this;
        }

        public Criteria andSsnGreaterThan(String value) {
            addCriterion("SSN >", value, "ssn");
            return this;
        }

        public Criteria andSsnGreaterThanOrEqualTo(String value) {
            addCriterion("SSN >=", value, "ssn");
            return this;
        }

        public Criteria andSsnLessThan(String value) {
            addCriterion("SSN <", value, "ssn");
            return this;
        }

        public Criteria andSsnLessThanOrEqualTo(String value) {
            addCriterion("SSN <=", value, "ssn");
            return this;
        }

        public Criteria andSsnLike(String value) {
            addCriterion("SSN like", value, "ssn");
            return this;
        }

        public Criteria andSsnNotLike(String value) {
            addCriterion("SSN not like", value, "ssn");
            return this;
        }

        public Criteria andSsnIn(List<String> values) {
            addCriterion("SSN in", values, "ssn");
            return this;
        }

        public Criteria andSsnNotIn(List<String> values) {
            addCriterion("SSN not in", values, "ssn");
            return this;
        }

        public Criteria andSsnBetween(String value1, String value2) {
            addCriterion("SSN between", value1, value2, "ssn");
            return this;
        }

        public Criteria andSsnNotBetween(String value1, String value2) {
            addCriterion("SSN not between", value1, value2, "ssn");
            return this;
        }

        public Criteria andReliefbecauseIsNull() {
            addCriterion("RELIEFBECAUSE is null");
            return this;
        }

        public Criteria andReliefbecauseIsNotNull() {
            addCriterion("RELIEFBECAUSE is not null");
            return this;
        }

        public Criteria andReliefbecauseEqualTo(String value) {
            addCriterion("RELIEFBECAUSE =", value, "reliefbecause");
            return this;
        }

        public Criteria andReliefbecauseNotEqualTo(String value) {
            addCriterion("RELIEFBECAUSE <>", value, "reliefbecause");
            return this;
        }

        public Criteria andReliefbecauseGreaterThan(String value) {
            addCriterion("RELIEFBECAUSE >", value, "reliefbecause");
            return this;
        }

        public Criteria andReliefbecauseGreaterThanOrEqualTo(String value) {
            addCriterion("RELIEFBECAUSE >=", value, "reliefbecause");
            return this;
        }

        public Criteria andReliefbecauseLessThan(String value) {
            addCriterion("RELIEFBECAUSE <", value, "reliefbecause");
            return this;
        }

        public Criteria andReliefbecauseLessThanOrEqualTo(String value) {
            addCriterion("RELIEFBECAUSE <=", value, "reliefbecause");
            return this;
        }

        public Criteria andReliefbecauseLike(String value) {
            addCriterion("RELIEFBECAUSE like", value, "reliefbecause");
            return this;
        }

        public Criteria andReliefbecauseNotLike(String value) {
            addCriterion("RELIEFBECAUSE not like", value, "reliefbecause");
            return this;
        }

        public Criteria andReliefbecauseIn(List<String> values) {
            addCriterion("RELIEFBECAUSE in", values, "reliefbecause");
            return this;
        }

        public Criteria andReliefbecauseNotIn(List<String> values) {
            addCriterion("RELIEFBECAUSE not in", values, "reliefbecause");
            return this;
        }

        public Criteria andReliefbecauseBetween(String value1, String value2) {
            addCriterion("RELIEFBECAUSE between", value1, value2, "reliefbecause");
            return this;
        }

        public Criteria andReliefbecauseNotBetween(String value1, String value2) {
            addCriterion("RELIEFBECAUSE not between", value1, value2, "reliefbecause");
            return this;
        }

        public Criteria andInterviewIsNull() {
            addCriterion("INTERVIEW is null");
            return this;
        }

        public Criteria andInterviewIsNotNull() {
            addCriterion("INTERVIEW is not null");
            return this;
        }

        public Criteria andInterviewEqualTo(String value) {
            addCriterion("INTERVIEW =", value, "interview");
            return this;
        }

        public Criteria andInterviewNotEqualTo(String value) {
            addCriterion("INTERVIEW <>", value, "interview");
            return this;
        }

        public Criteria andInterviewGreaterThan(String value) {
            addCriterion("INTERVIEW >", value, "interview");
            return this;
        }

        public Criteria andInterviewGreaterThanOrEqualTo(String value) {
            addCriterion("INTERVIEW >=", value, "interview");
            return this;
        }

        public Criteria andInterviewLessThan(String value) {
            addCriterion("INTERVIEW <", value, "interview");
            return this;
        }

        public Criteria andInterviewLessThanOrEqualTo(String value) {
            addCriterion("INTERVIEW <=", value, "interview");
            return this;
        }

        public Criteria andInterviewLike(String value) {
            addCriterion("INTERVIEW like", value, "interview");
            return this;
        }

        public Criteria andInterviewNotLike(String value) {
            addCriterion("INTERVIEW not like", value, "interview");
            return this;
        }

        public Criteria andInterviewIn(List<String> values) {
            addCriterion("INTERVIEW in", values, "interview");
            return this;
        }

        public Criteria andInterviewNotIn(List<String> values) {
            addCriterion("INTERVIEW not in", values, "interview");
            return this;
        }

        public Criteria andInterviewBetween(String value1, String value2) {
            addCriterion("INTERVIEW between", value1, value2, "interview");
            return this;
        }

        public Criteria andInterviewNotBetween(String value1, String value2) {
            addCriterion("INTERVIEW not between", value1, value2, "interview");
            return this;
        }

        public Criteria andInterviewtimeIsNull() {
            addCriterion("INTERVIEWTIME is null");
            return this;
        }

        public Criteria andInterviewtimeIsNotNull() {
            addCriterion("INTERVIEWTIME is not null");
            return this;
        }

        public Criteria andInterviewtimeEqualTo(Date value) {
            addCriterionForJDBCDate("INTERVIEWTIME =", value, "interviewtime");
            return this;
        }

        public Criteria andInterviewtimeNotEqualTo(Date value) {
            addCriterionForJDBCDate("INTERVIEWTIME <>", value, "interviewtime");
            return this;
        }

        public Criteria andInterviewtimeGreaterThan(Date value) {
            addCriterionForJDBCDate("INTERVIEWTIME >", value, "interviewtime");
            return this;
        }

        public Criteria andInterviewtimeGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("INTERVIEWTIME >=", value, "interviewtime");
            return this;
        }

        public Criteria andInterviewtimeLessThan(Date value) {
            addCriterionForJDBCDate("INTERVIEWTIME <", value, "interviewtime");
            return this;
        }

        public Criteria andInterviewtimeLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("INTERVIEWTIME <=", value, "interviewtime");
            return this;
        }

        public Criteria andInterviewtimeIn(List<Date> values) {
            addCriterionForJDBCDate("INTERVIEWTIME in", values, "interviewtime");
            return this;
        }

        public Criteria andInterviewtimeNotIn(List<Date> values) {
            addCriterionForJDBCDate("INTERVIEWTIME not in", values, "interviewtime");
            return this;
        }

        public Criteria andInterviewtimeBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("INTERVIEWTIME between", value1, value2, "interviewtime");
            return this;
        }

        public Criteria andInterviewtimeNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("INTERVIEWTIME not between", value1, value2, "interviewtime");
            return this;
        }

        public Criteria andComofstreetIsNull() {
            addCriterion("COMOFSTREET is null");
            return this;
        }

        public Criteria andComofstreetIsNotNull() {
            addCriterion("COMOFSTREET is not null");
            return this;
        }

        public Criteria andComofstreetEqualTo(String value) {
            addCriterion("COMOFSTREET =", value, "comofstreet");
            return this;
        }

        public Criteria andComofstreetNotEqualTo(String value) {
            addCriterion("COMOFSTREET <>", value, "comofstreet");
            return this;
        }

        public Criteria andComofstreetGreaterThan(String value) {
            addCriterion("COMOFSTREET >", value, "comofstreet");
            return this;
        }

        public Criteria andComofstreetGreaterThanOrEqualTo(String value) {
            addCriterion("COMOFSTREET >=", value, "comofstreet");
            return this;
        }

        public Criteria andComofstreetLessThan(String value) {
            addCriterion("COMOFSTREET <", value, "comofstreet");
            return this;
        }

        public Criteria andComofstreetLessThanOrEqualTo(String value) {
            addCriterion("COMOFSTREET <=", value, "comofstreet");
            return this;
        }

        public Criteria andComofstreetLike(String value) {
            addCriterion("COMOFSTREET like", value, "comofstreet");
            return this;
        }

        public Criteria andComofstreetNotLike(String value) {
            addCriterion("COMOFSTREET not like", value, "comofstreet");
            return this;
        }

        public Criteria andComofstreetIn(List<String> values) {
            addCriterion("COMOFSTREET in", values, "comofstreet");
            return this;
        }

        public Criteria andComofstreetNotIn(List<String> values) {
            addCriterion("COMOFSTREET not in", values, "comofstreet");
            return this;
        }

        public Criteria andComofstreetBetween(String value1, String value2) {
            addCriterion("COMOFSTREET between", value1, value2, "comofstreet");
            return this;
        }

        public Criteria andComofstreetNotBetween(String value1, String value2) {
            addCriterion("COMOFSTREET not between", value1, value2, "comofstreet");
            return this;
        }

        public Criteria andResultofstreetIsNull() {
            addCriterion("RESULTOFSTREET is null");
            return this;
        }

        public Criteria andResultofstreetIsNotNull() {
            addCriterion("RESULTOFSTREET is not null");
            return this;
        }

        public Criteria andResultofstreetEqualTo(Short value) {
            addCriterion("RESULTOFSTREET =", value, "resultofstreet");
            return this;
        }

        public Criteria andResultofstreetNotEqualTo(Short value) {
            addCriterion("RESULTOFSTREET <>", value, "resultofstreet");
            return this;
        }

        public Criteria andResultofstreetGreaterThan(Short value) {
            addCriterion("RESULTOFSTREET >", value, "resultofstreet");
            return this;
        }

        public Criteria andResultofstreetGreaterThanOrEqualTo(Short value) {
            addCriterion("RESULTOFSTREET >=", value, "resultofstreet");
            return this;
        }

        public Criteria andResultofstreetLessThan(Short value) {
            addCriterion("RESULTOFSTREET <", value, "resultofstreet");
            return this;
        }

        public Criteria andResultofstreetLessThanOrEqualTo(Short value) {
            addCriterion("RESULTOFSTREET <=", value, "resultofstreet");
            return this;
        }

        public Criteria andResultofstreetIn(List<Short> values) {
            addCriterion("RESULTOFSTREET in", values, "resultofstreet");
            return this;
        }

        public Criteria andResultofstreetNotIn(List<Short> values) {
            addCriterion("RESULTOFSTREET not in", values, "resultofstreet");
            return this;
        }

        public Criteria andResultofstreetBetween(Short value1, Short value2) {
            addCriterion("RESULTOFSTREET between", value1, value2, "resultofstreet");
            return this;
        }

        public Criteria andResultofstreetNotBetween(Short value1, Short value2) {
            addCriterion("RESULTOFSTREET not between", value1, value2, "resultofstreet");
            return this;
        }

        public Criteria andStreetapptimeIsNull() {
            addCriterion("STREETAPPTIME is null");
            return this;
        }

        public Criteria andStreetapptimeIsNotNull() {
            addCriterion("STREETAPPTIME is not null");
            return this;
        }

        public Criteria andStreetapptimeEqualTo(Date value) {
            addCriterionForJDBCDate("STREETAPPTIME =", value, "streetapptime");
            return this;
        }

        public Criteria andStreetapptimeNotEqualTo(Date value) {
            addCriterionForJDBCDate("STREETAPPTIME <>", value, "streetapptime");
            return this;
        }

        public Criteria andStreetapptimeGreaterThan(Date value) {
            addCriterionForJDBCDate("STREETAPPTIME >", value, "streetapptime");
            return this;
        }

        public Criteria andStreetapptimeGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("STREETAPPTIME >=", value, "streetapptime");
            return this;
        }

        public Criteria andStreetapptimeLessThan(Date value) {
            addCriterionForJDBCDate("STREETAPPTIME <", value, "streetapptime");
            return this;
        }

        public Criteria andStreetapptimeLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("STREETAPPTIME <=", value, "streetapptime");
            return this;
        }

        public Criteria andStreetapptimeIn(List<Date> values) {
            addCriterionForJDBCDate("STREETAPPTIME in", values, "streetapptime");
            return this;
        }

        public Criteria andStreetapptimeNotIn(List<Date> values) {
            addCriterionForJDBCDate("STREETAPPTIME not in", values, "streetapptime");
            return this;
        }

        public Criteria andStreetapptimeBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("STREETAPPTIME between", value1, value2, "streetapptime");
            return this;
        }

        public Criteria andStreetapptimeNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("STREETAPPTIME not between", value1, value2, "streetapptime");
            return this;
        }

        public Criteria andAuditorofstreetIsNull() {
            addCriterion("AUDITOROFSTREET is null");
            return this;
        }

        public Criteria andAuditorofstreetIsNotNull() {
            addCriterion("AUDITOROFSTREET is not null");
            return this;
        }

        public Criteria andAuditorofstreetEqualTo(String value) {
            addCriterion("AUDITOROFSTREET =", value, "auditorofstreet");
            return this;
        }

        public Criteria andAuditorofstreetNotEqualTo(String value) {
            addCriterion("AUDITOROFSTREET <>", value, "auditorofstreet");
            return this;
        }

        public Criteria andAuditorofstreetGreaterThan(String value) {
            addCriterion("AUDITOROFSTREET >", value, "auditorofstreet");
            return this;
        }

        public Criteria andAuditorofstreetGreaterThanOrEqualTo(String value) {
            addCriterion("AUDITOROFSTREET >=", value, "auditorofstreet");
            return this;
        }

        public Criteria andAuditorofstreetLessThan(String value) {
            addCriterion("AUDITOROFSTREET <", value, "auditorofstreet");
            return this;
        }

        public Criteria andAuditorofstreetLessThanOrEqualTo(String value) {
            addCriterion("AUDITOROFSTREET <=", value, "auditorofstreet");
            return this;
        }

        public Criteria andAuditorofstreetLike(String value) {
            addCriterion("AUDITOROFSTREET like", value, "auditorofstreet");
            return this;
        }

        public Criteria andAuditorofstreetNotLike(String value) {
            addCriterion("AUDITOROFSTREET not like", value, "auditorofstreet");
            return this;
        }

        public Criteria andAuditorofstreetIn(List<String> values) {
            addCriterion("AUDITOROFSTREET in", values, "auditorofstreet");
            return this;
        }

        public Criteria andAuditorofstreetNotIn(List<String> values) {
            addCriterion("AUDITOROFSTREET not in", values, "auditorofstreet");
            return this;
        }

        public Criteria andAuditorofstreetBetween(String value1, String value2) {
            addCriterion("AUDITOROFSTREET between", value1, value2, "auditorofstreet");
            return this;
        }

        public Criteria andAuditorofstreetNotBetween(String value1, String value2) {
            addCriterion("AUDITOROFSTREET not between", value1, value2, "auditorofstreet");
            return this;
        }

        public Criteria andComofaregIsNull() {
            addCriterion("COMOFAREG is null");
            return this;
        }

        public Criteria andComofaregIsNotNull() {
            addCriterion("COMOFAREG is not null");
            return this;
        }

        public Criteria andComofaregEqualTo(String value) {
            addCriterion("COMOFAREG =", value, "comofareg");
            return this;
        }

        public Criteria andComofaregNotEqualTo(String value) {
            addCriterion("COMOFAREG <>", value, "comofareg");
            return this;
        }

        public Criteria andComofaregGreaterThan(String value) {
            addCriterion("COMOFAREG >", value, "comofareg");
            return this;
        }

        public Criteria andComofaregGreaterThanOrEqualTo(String value) {
            addCriterion("COMOFAREG >=", value, "comofareg");
            return this;
        }

        public Criteria andComofaregLessThan(String value) {
            addCriterion("COMOFAREG <", value, "comofareg");
            return this;
        }

        public Criteria andComofaregLessThanOrEqualTo(String value) {
            addCriterion("COMOFAREG <=", value, "comofareg");
            return this;
        }

        public Criteria andComofaregLike(String value) {
            addCriterion("COMOFAREG like", value, "comofareg");
            return this;
        }

        public Criteria andComofaregNotLike(String value) {
            addCriterion("COMOFAREG not like", value, "comofareg");
            return this;
        }

        public Criteria andComofaregIn(List<String> values) {
            addCriterion("COMOFAREG in", values, "comofareg");
            return this;
        }

        public Criteria andComofaregNotIn(List<String> values) {
            addCriterion("COMOFAREG not in", values, "comofareg");
            return this;
        }

        public Criteria andComofaregBetween(String value1, String value2) {
            addCriterion("COMOFAREG between", value1, value2, "comofareg");
            return this;
        }

        public Criteria andComofaregNotBetween(String value1, String value2) {
            addCriterion("COMOFAREG not between", value1, value2, "comofareg");
            return this;
        }

        public Criteria andResultofaregIsNull() {
            addCriterion("RESULTOFAREG is null");
            return this;
        }

        public Criteria andResultofaregIsNotNull() {
            addCriterion("RESULTOFAREG is not null");
            return this;
        }

        public Criteria andResultofaregEqualTo(Short value) {
            addCriterion("RESULTOFAREG =", value, "resultofareg");
            return this;
        }

        public Criteria andResultofaregNotEqualTo(Short value) {
            addCriterion("RESULTOFAREG <>", value, "resultofareg");
            return this;
        }

        public Criteria andResultofaregGreaterThan(Short value) {
            addCriterion("RESULTOFAREG >", value, "resultofareg");
            return this;
        }

        public Criteria andResultofaregGreaterThanOrEqualTo(Short value) {
            addCriterion("RESULTOFAREG >=", value, "resultofareg");
            return this;
        }

        public Criteria andResultofaregLessThan(Short value) {
            addCriterion("RESULTOFAREG <", value, "resultofareg");
            return this;
        }

        public Criteria andResultofaregLessThanOrEqualTo(Short value) {
            addCriterion("RESULTOFAREG <=", value, "resultofareg");
            return this;
        }

        public Criteria andResultofaregIn(List<Short> values) {
            addCriterion("RESULTOFAREG in", values, "resultofareg");
            return this;
        }

        public Criteria andResultofaregNotIn(List<Short> values) {
            addCriterion("RESULTOFAREG not in", values, "resultofareg");
            return this;
        }

        public Criteria andResultofaregBetween(Short value1, Short value2) {
            addCriterion("RESULTOFAREG between", value1, value2, "resultofareg");
            return this;
        }

        public Criteria andResultofaregNotBetween(Short value1, Short value2) {
            addCriterion("RESULTOFAREG not between", value1, value2, "resultofareg");
            return this;
        }

        public Criteria andAregapptimeIsNull() {
            addCriterion("AREGAPPTIME is null");
            return this;
        }

        public Criteria andAregapptimeIsNotNull() {
            addCriterion("AREGAPPTIME is not null");
            return this;
        }

        public Criteria andAregapptimeEqualTo(Date value) {
            addCriterionForJDBCDate("AREGAPPTIME =", value, "aregapptime");
            return this;
        }

        public Criteria andAregapptimeNotEqualTo(Date value) {
            addCriterionForJDBCDate("AREGAPPTIME <>", value, "aregapptime");
            return this;
        }

        public Criteria andAregapptimeGreaterThan(Date value) {
            addCriterionForJDBCDate("AREGAPPTIME >", value, "aregapptime");
            return this;
        }

        public Criteria andAregapptimeGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("AREGAPPTIME >=", value, "aregapptime");
            return this;
        }

        public Criteria andAregapptimeLessThan(Date value) {
            addCriterionForJDBCDate("AREGAPPTIME <", value, "aregapptime");
            return this;
        }

        public Criteria andAregapptimeLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("AREGAPPTIME <=", value, "aregapptime");
            return this;
        }

        public Criteria andAregapptimeIn(List<Date> values) {
            addCriterionForJDBCDate("AREGAPPTIME in", values, "aregapptime");
            return this;
        }

        public Criteria andAregapptimeNotIn(List<Date> values) {
            addCriterionForJDBCDate("AREGAPPTIME not in", values, "aregapptime");
            return this;
        }

        public Criteria andAregapptimeBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("AREGAPPTIME between", value1, value2, "aregapptime");
            return this;
        }

        public Criteria andAregapptimeNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("AREGAPPTIME not between", value1, value2, "aregapptime");
            return this;
        }

        public Criteria andAuditorofaregIsNull() {
            addCriterion("AUDITOROFAREG is null");
            return this;
        }

        public Criteria andAuditorofaregIsNotNull() {
            addCriterion("AUDITOROFAREG is not null");
            return this;
        }

        public Criteria andAuditorofaregEqualTo(String value) {
            addCriterion("AUDITOROFAREG =", value, "auditorofareg");
            return this;
        }

        public Criteria andAuditorofaregNotEqualTo(String value) {
            addCriterion("AUDITOROFAREG <>", value, "auditorofareg");
            return this;
        }

        public Criteria andAuditorofaregGreaterThan(String value) {
            addCriterion("AUDITOROFAREG >", value, "auditorofareg");
            return this;
        }

        public Criteria andAuditorofaregGreaterThanOrEqualTo(String value) {
            addCriterion("AUDITOROFAREG >=", value, "auditorofareg");
            return this;
        }

        public Criteria andAuditorofaregLessThan(String value) {
            addCriterion("AUDITOROFAREG <", value, "auditorofareg");
            return this;
        }

        public Criteria andAuditorofaregLessThanOrEqualTo(String value) {
            addCriterion("AUDITOROFAREG <=", value, "auditorofareg");
            return this;
        }

        public Criteria andAuditorofaregLike(String value) {
            addCriterion("AUDITOROFAREG like", value, "auditorofareg");
            return this;
        }

        public Criteria andAuditorofaregNotLike(String value) {
            addCriterion("AUDITOROFAREG not like", value, "auditorofareg");
            return this;
        }

        public Criteria andAuditorofaregIn(List<String> values) {
            addCriterion("AUDITOROFAREG in", values, "auditorofareg");
            return this;
        }

        public Criteria andAuditorofaregNotIn(List<String> values) {
            addCriterion("AUDITOROFAREG not in", values, "auditorofareg");
            return this;
        }

        public Criteria andAuditorofaregBetween(String value1, String value2) {
            addCriterion("AUDITOROFAREG between", value1, value2, "auditorofareg");
            return this;
        }

        public Criteria andAuditorofaregNotBetween(String value1, String value2) {
            addCriterion("AUDITOROFAREG not between", value1, value2, "auditorofareg");
            return this;
        }

        public Criteria andAregmasterIsNull() {
            addCriterion("AREGMASTER is null");
            return this;
        }

        public Criteria andAregmasterIsNotNull() {
            addCriterion("AREGMASTER is not null");
            return this;
        }

        public Criteria andAregmasterEqualTo(String value) {
            addCriterion("AREGMASTER =", value, "aregmaster");
            return this;
        }

        public Criteria andAregmasterNotEqualTo(String value) {
            addCriterion("AREGMASTER <>", value, "aregmaster");
            return this;
        }

        public Criteria andAregmasterGreaterThan(String value) {
            addCriterion("AREGMASTER >", value, "aregmaster");
            return this;
        }

        public Criteria andAregmasterGreaterThanOrEqualTo(String value) {
            addCriterion("AREGMASTER >=", value, "aregmaster");
            return this;
        }

        public Criteria andAregmasterLessThan(String value) {
            addCriterion("AREGMASTER <", value, "aregmaster");
            return this;
        }

        public Criteria andAregmasterLessThanOrEqualTo(String value) {
            addCriterion("AREGMASTER <=", value, "aregmaster");
            return this;
        }

        public Criteria andAregmasterLike(String value) {
            addCriterion("AREGMASTER like", value, "aregmaster");
            return this;
        }

        public Criteria andAregmasterNotLike(String value) {
            addCriterion("AREGMASTER not like", value, "aregmaster");
            return this;
        }

        public Criteria andAregmasterIn(List<String> values) {
            addCriterion("AREGMASTER in", values, "aregmaster");
            return this;
        }

        public Criteria andAregmasterNotIn(List<String> values) {
            addCriterion("AREGMASTER not in", values, "aregmaster");
            return this;
        }

        public Criteria andAregmasterBetween(String value1, String value2) {
            addCriterion("AREGMASTER between", value1, value2, "aregmaster");
            return this;
        }

        public Criteria andAregmasterNotBetween(String value1, String value2) {
            addCriterion("AREGMASTER not between", value1, value2, "aregmaster");
            return this;
        }

        public Criteria andSalmoneyIsNull() {
            addCriterion("SALMONEY is null");
            return this;
        }

        public Criteria andSalmoneyIsNotNull() {
            addCriterion("SALMONEY is not null");
            return this;
        }

        public Criteria andSalmoneyEqualTo(BigDecimal value) {
            addCriterion("SALMONEY =", value, "salmoney");
            return this;
        }

        public Criteria andSalmoneyNotEqualTo(BigDecimal value) {
            addCriterion("SALMONEY <>", value, "salmoney");
            return this;
        }

        public Criteria andSalmoneyGreaterThan(BigDecimal value) {
            addCriterion("SALMONEY >", value, "salmoney");
            return this;
        }

        public Criteria andSalmoneyGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("SALMONEY >=", value, "salmoney");
            return this;
        }

        public Criteria andSalmoneyLessThan(BigDecimal value) {
            addCriterion("SALMONEY <", value, "salmoney");
            return this;
        }

        public Criteria andSalmoneyLessThanOrEqualTo(BigDecimal value) {
            addCriterion("SALMONEY <=", value, "salmoney");
            return this;
        }

        public Criteria andSalmoneyIn(List<BigDecimal> values) {
            addCriterion("SALMONEY in", values, "salmoney");
            return this;
        }

        public Criteria andSalmoneyNotIn(List<BigDecimal> values) {
            addCriterion("SALMONEY not in", values, "salmoney");
            return this;
        }

        public Criteria andSalmoneyBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("SALMONEY between", value1, value2, "salmoney");
            return this;
        }

        public Criteria andSalmoneyNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("SALMONEY not between", value1, value2, "salmoney");
            return this;
        }
    }
}